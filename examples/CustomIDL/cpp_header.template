// Autogenerated from cpp_header.template file
#include "attributes/attributes.h"
{% for s in struct.get_structs_of_attributes() %}
#include "{{full_path_to_file_name(s)}}"
{% endfor %}

{% if struct.parent.target_namespace != None %}
{{open_namespace(struct.parent)}}
{% endif %}

class {{struct.name}} {
{% for attribute in struct.attributes %}
    {% if "ScalarAttribute" in attribute.__class__.__name__ %}
        // -----------------------------
        // SCALAR {{ attribute.name }}
        {{ attribute.type.name }} {{ attribute.name }} // affects size: {{ attribute.affects_size() }}
    {% endif %}
    {% if "ArrayAttribute" in attribute.__class__.__name__ %}
        // -----------------------------
        // ARRAY {{ attribute.name }}
        // FIXED SIZE: {{ attribute.array_size.has_fixed_size() }}
        {% if attribute.array_size.has_fixed_size() %}
        std::array<{{ attribute.type.name }}, {{ attribute.array_size.render_formula() }} > {{ attribute.name }};
        {% else %}
        std::vector<{{ attribute.type.name }}> {{ attribute.name }}; // [ {{ attribute.array_size.render_formula() }} ]
        {% endif %}
    {% endif %}
{% endfor %}

};

{% if struct.parent.target_namespace != None %}
{{close_namespace(struct.parent)}}
{% endif %}

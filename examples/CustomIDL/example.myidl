import "types.myidl"

package example {
    target_namespace "project.example"

    struct Header {
        scalar proofword : types.int
        scalar N : types.int { default = "0x16" }
        array info : types.int[10]
    }
    struct A {
        scalar header : Header
        scalar n : types.int {default="5"}
        scalar a : types.int
        scalar b : types.int
        scalar c : types.float
        array  d : types.float[5]
        array  b1 : types.int[3+4]
        array  b2 : types.int[(3+4)]
        array  b3 : types.int[3+(4+5)]
        array  b4 : types.int[(3+4)+5]
        array  b5 : types.int[(3+4)+(5)]
        array  c1 : types.int[3*4]
        array  c2 : types.int[(3*4)]
        array  c3 : types.int[3*(4*5)]
        array  c4 : types.int[(3*4)*5]
        array  c5 : types.int[(3*4)*(5)]
        array  e0 : types.int[3+n]
        array  e1 : types.int[n]
        array  e2 : types.int[header.N]
        array  e3 : types.int[3*4]
        array  e4 : types.int[3*n]
        array  e5 : types.int[3*header.N]
        array  e6 : types.int[n*header.N]
        array  e7 : types.int[3*n+3]
        array  e8 : types.int[n+3*n]
        array  e9 : types.int[(n+3)*n]
        //array  err : types.int[header.info]
        array  f1 : types.int[3-4]
        array  f2 : types.int[(3-4)]
        array  f3 : types.int[3-(4-5)]
        array  f4 : types.int[(3-4)-5]
        array  f5 : types.int[(3-4)-(5)]
        array  f1 : types.int[1*2+3*4-5*6+9/2*2/8]
        array  f2 : types.int[(3-4)]
        array  f3 : types.int[3-(4-5)]
        array  f4 : types.int[(3-4)-5]
        array  f5 : types.int[(3-4)-(5)]
        array  m1 : types.int[2][3]
        array  m2 : types.int[2][3][4]
        array  m3 : types.int[2][3][4][5]
        array  m4 : types.int[2][n]
    }

}
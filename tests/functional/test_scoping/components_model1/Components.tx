Model:
        packages*=Package
;

Package:
        'package' name=ID '{'
        (
        components+=Component
        |
        instances+=Instance
        |
        connections+=Connection
        |
        packages+=Package
        |
        interfaces+=Interface
        )*
        '}'
;

Interface: 'interface' name=ID;

// A component defines something with in/out ports
// A component can inherit form another component --> lookup with inheritance
Component:
    'component' name=ID ('extends' extends+=[Component|FQN][','])? '{'
        slots*=Slot
    '}'
;

Slot: SlotIn|SlotOut;

SlotIn:
    'in' name=ID
    ('(''''format' formats+=[Interface|FQN][','] ')')?
;
SlotOut:
    'out' name=ID
    ('(' '''format' formats+=[Interface|FQN][','] ')')?
;

// An instance of a component can be connected to other instances
// always with portout --> portin
Instance:
    'instance' name=ID ':' component=[Component|FQN] ;

// A connection connects two instances
// --> lookup of ports to corresponding component belonging to the instance
// --> lookup of ports with inheritance
Connection:
    'connect'
      from_inst=[Instance|ID] '.' from_port=[SlotOut|ID]
    'to'
      to_inst=[Instance|ID] '.' to_port=[SlotIn|ID]
;

FQN: ID+['.'];
Comment: /\/\/.*$/;

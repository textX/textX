# Autogenerated from python-construct.template file
#
# This is only a demo. Details need to be adapted.
# Use the "python" (instead of the "python-construct") version
#

import construct
{% for s in struct.get_structs_of_attributes() %}
import {{pyctool.the_package(s)}}
{% endfor %}

{{struct.name}}_record = construct.Struct(
{% for attribute in struct.attributes %}
{% if "ScalarAttribute" in attribute.__class__.__name__ %}
    {% if attribute.affects_size() %}
    "{{attribute.name}}" / {{pyctool.typename(attribute.type)}}, # fixed: read only
    {% endif %}
{% endif %}
{% if "ArrayAttribute" in attribute.__class__.__name__ %}
    "{{attribute.name}}" / construct.Array( {% for s in attribute.array_dimensions %} ({{s.array_size.render_formula(separator=".",postfix="",prefix="this.")}}) {{ "*" if not loop.last }} {% endfor %} , {{pyctool.typename(attribute.type)}} ),
{% endif %}
{% endfor %}
)

